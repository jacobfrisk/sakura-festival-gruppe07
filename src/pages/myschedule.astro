---
import "../styles/style.css";
import { Debug } from "astro/components";
import EventSlot from "../components/EventSlot.astro";
import ButtonLink from "../components/ButtonLink.astro";
import Layout from "../components/Layout.astro";

const eventUrl =
  "https://fyoibrnkhfthmeiffltn.supabase.co/rest/v1/Events?apikey=eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJzdXBhYmFzZSIsInJlZiI6ImZ5b2licm5raGZ0aG1laWZmbHRuIiwicm9sZSI6ImFub24iLCJpYXQiOjE2Nzg3ODAxNDAsImV4cCI6MTk5NDM1NjE0MH0.N4_YxpgdHxnVlLKlbxyFb2MT2AM-4wqZt0LIP3E31To";

const options = {
  headers: {
    apikey: "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJzdXBhYmFzZSIsInJlZiI6ImZ5b2licm5raGZ0aG1laWZmbHRuIiwicm9sZSI6ImFub24iLCJpYXQiOjE2Nzg3ODAxNDAsImV4cCI6MTk5NDM1NjE0MH0.N4_YxpgdHxnVlLKlbxyFb2MT2AM-4wqZt0LIP3E31To",
  },
};

const response1 = await fetch(eventUrl, options);
const eventData = await response1.json();
---

<div class="schedule-container">
  <div class="schedule-left">
    <h2 class="schedule-header">My schedule</h2>
    <div class="btn-container">
      <ButtonLink variant="primary" size="large" href="#saturday">Saturday</ButtonLink>
      <ButtonLink variant="primary" size="large" href="#sunday">Sunday</ButtonLink>
    </div>
  </div>
  <div class="schedule-right">
    <div>
      <section id="saturday">
        <h4>Saturday</h4>
        <h1 id="event-name"></h1>
        <p id="event-day"></p>
        <p id="event-location"></p>
        <p id="event-time"></p>
        {
          eventData
            .sort((a, b) => parseInt(a.time) - parseInt(b.time))
            .filter((stage) => stage.day === "Saturday")
            .map((stage) => <EventSlot link={"events/" + stage.id} header={stage.name} location={stage.location} time={stage.time} day={stage.day} image={stage.picture} />)
        }
        <div></div>
      </section>
      <section id="sunday">
        <h4>Sunday</h4>
        {
          eventData
            .sort((a, b) => parseInt(a.time) - parseInt(b.time))
            .filter((stage) => stage.day === "Sunday")
            .map((stage) => <EventSlot link={"events/" + stage.id} header={stage.name} location={stage.location} time={stage.time} day={stage.day} image={stage.picture} />)
        }
      </section>
    </div>
  </div>
</div>

<style>
  .booths {
    display: flex;
    flex-flow: wrap;
    justify-content: center;
    gap: var(--small);
    text-transform: uppercase;
  }

  .booth-container {
    margin-block: var(--large);
  }

  .booths fragment {
    display: flex;
    place-items: center;
    gap: var(--small);
  }
  .booth-container h2 {
    text-align: center;
    margin-bottom: var(--large);
    color: var(--red);
  }

  .booth-container h4 {
    font-family: "body-font";
  }
  .hero-video {
    mask: url("img/svg-video-mask.svg") no-repeat center / contain;
    -webkit-mask: url("img/svg-video-mask.svg") no-repeat center / contain;
  }

  .hero-grid h1,
  p {
    text-align: center;
  }

  .hero-grid > * {
    margin-bottom: 3rem;
  }

  .hero-grid video {
    position: relative;
    left: 50%;
    transform: translateX(-50%);
  }

  .schedule-left {
    background-color: var(--pink);
    padding-block: var(--small);
    position: sticky;
    top: 0;

    color: var(--red);
    display: grid;
    gap: 1rem;
  }

  h1 {
    color: var(--red);
  }

  .schedule-left h2 {
    font-size: var(--h1-font-size);
    text-align: center;
  }

  hr {
    margin-top: var(--small);
  }

  section h4 {
    text-align: center;
    font-size: var(--h3-font-size);
  }
  #saturday h4 {
    margin-top: var(--large);
  }
  #sunday h4 {
    margin-top: var(--large);
  }

  .btn-container {
    display: flex;
  }
  #sunday,
  #saturday {
    scroll-margin-top: 180px;
  }

  #sunday p,
  #saturday p {
    padding-top: 0.2rem;
  }

  @media (min-width: 1200px) {
    #saturday h4 {
      margin-top: 0;
    }
    .hero-grid h1,
    p {
      text-align: left;
    }

    .hero-grid h1 {
      position: absolute;
      top: 5%;
    }

    .hero-grid {
      display: grid;
      grid-template-columns: repeat(3, 1fr);
      position: relative;
      min-height: 90vh;
    }

    .hero-grid p {
      position: absolute;
      left: 80%;
      bottom: 5%;
      max-width: 80ch;
    }

    .hero-grid video {
      position: absolute;
      top: 50%;
      left: 50%;
      transform: translate(-50%, -50%);
      max-width: 55vw;
    }

    /* .hero-video {
        max-width: 45vw;
      } */

    .btn-container {
      flex-direction: column;
      gap: var(--large);
    }

    #sunday {
      scroll-margin-top: 30px;
    }

    #saturday {
      scroll-margin-top: 0px;
    }
    .schedule-container {
      display: flex;
      width: 100%;
    }
    .schedule-right {
      width: 50%;
    }

    .schedule-left {
      width: 50%;
      height: 100dvh;
      height: 100vh;
      display: flex;
      justify-content: center;
      align-items: center;
      flex-direction: column;
      gap: var(--large);
    }
  }
</style>

<script>
  //   const storedEvent = localStorage.getItem("favoriteEvent");
  //   if (storedEvent) {
  //     const event = JSON.parse(storedEvent);
  //     document.querySelector("#event-name").innerHTML = event.name;
  //     document.querySelector("#event-day").innerHTML = event.day;
  //     document.querySelector("#event-location").innerHTML = event.location;
  //     document.querySelector("#event-time").innerHTML = event.time;
  //   }
</script>
